{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","state","result","z","getResult","_callee","response","response2","parity","regenerator_default","a","wrap","_context","prev","next","_this","para1","para2","setState","miktar","fetch","concat","sent","json","console","log","rates","stop","v","e","preventDefault","document","getElementById","value","react_default","createElement","id","className","type","placeholder","onClick","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oRA8HeA,0NAzHbC,MAAQ,CAAEC,OAAQ,KAAMC,EAAG,QAC3BC,+BAAY,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAN,EAAA,OAAAO,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACNC,EAAKC,QAAUD,EAAKE,MADd,CAAAL,EAAAE,KAAA,QAERC,EAAKG,SAAS,CAAEhB,OAAQa,EAAKI,SAFrBP,EAAAE,KAAA,sBAIE,+CAJFF,EAAAE,KAAA,EAKaM,MAAK,GAAAC,OADhB,gDACgBA,OAAUN,EAAKC,QALjC,cAKJV,EALIM,EAAAU,KAAAV,EAAAE,KAAA,GAOcR,EAASiB,OAPvB,QAOJhB,EAPIK,EAAAU,KAQRE,QAAQC,IAAIlB,GAERC,EAASD,EAAUmB,MAAMX,EAAKE,OAC9Bf,EAASa,EAAKI,OAASX,EAC3BO,EAAKG,SAAS,CAAEhB,OAAQA,IAZhB,QAcVa,EAAKG,SAAS,CAAEf,EAAG,kBAdT,yBAAAS,EAAAe,SAAAtB,QAgBZuB,EAAI,SAAAC,GACFA,EAAEC,iBACFf,EAAKI,OAASY,SAASC,eAAe,UAAUC,MAChDlB,EAAKC,MAAQe,SAASC,eAAe,SAASC,MAC9ClB,EAAKE,MAAQc,SAASC,eAAe,SAASC,MAC9ClB,EAAKX,qFAIL,OACE8B,EAAAxB,EAAAyB,cAAA,WACED,EAAAxB,EAAAyB,cAAA,OAAKC,GAAG,iBACNF,EAAAxB,EAAAyB,cAAA,OAAKE,UAAU,mBACbH,EAAAxB,EAAAyB,cAAA,OAAKE,UAAU,YAAYD,GAAG,KAC5BF,EAAAxB,EAAAyB,cAAA,gCACAD,EAAAxB,EAAAyB,cAAA,OAAKE,UAAU,OACbH,EAAAxB,EAAAyB,cAAA,OAAKC,GAAG,UACNF,EAAAxB,EAAAyB,cAAA,SAAOG,KAAK,SAASC,YAAY,SAASH,GAAG,WAC7CF,EAAAxB,EAAAyB,cAAA,UAAQE,UAAU,gBAAgBD,GAAG,SACnCF,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,QAEFC,EAAAxB,EAAAyB,cAAA,UAAQE,UAAU,gBAAgBD,GAAG,SACnCF,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,OACAC,EAAAxB,EAAAyB,cAAA,UAAQF,MAAM,OAAd,QAEFC,EAAAxB,EAAAyB,cAAA,UAAQK,QAASC,KAAKb,GAAtB,WAGFM,EAAAxB,EAAAyB,cAAA,OAAKC,GAAG,SACLK,KAAKtB,OADR,IACiBsB,KAAKzB,MACnByB,KAAKxC,MAAME,EACXsC,KAAKxC,MAAMC,OAHd,IAGuBuC,KAAKxB,mBAhH1ByB,cCQEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOf,EAAAxB,EAAAyB,cAACe,EAAD,MAASnB,SAASC,eAAe,SD2H3C,kBAAmBmB,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.368c4053.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = { result: null, z: null };\n  getResult = async () => {\n    if (this.para1 === this.para2) {\n      this.setState({ result: this.miktar });\n    } else {\n      let url = \"https://api.exchangeratesapi.io/latest?base=\";\n      let response = await fetch(`${url}${this.para1}`);\n\n      let response2 = await response.json();\n      console.log(response2);\n\n      let parity = response2.rates[this.para2];\n      let result = this.miktar * parity;\n      this.setState({ result: result });\n    }\n    this.setState({ z: \" is equal to \" });\n  };\n  v = e => {\n    e.preventDefault();\n    this.miktar = document.getElementById(\"miktar\").value;\n    this.para1 = document.getElementById(\"para1\").value;\n    this.para2 = document.getElementById(\"para2\").value;\n    this.getResult();\n  };\n\n  render() {\n    return (\n      <div>\n        <div id=\"çerçeve\">\n          <div className=\"içerik_react\">\n            <div className=\"container\" id=\"s\">\n              <h3>Currency Converter</h3>\n              <div className=\"row\">\n                <div id=\"render\">\n                  <input type=\"number\" placeholder=\"Miktar\" id=\"miktar\" />\n                  <select className=\"custom-select\" id=\"para1\">\n                    <option value=\"USD\">USD</option>\n                    <option value=\"EUR\">EUR</option>\n                    <option value=\"JPY\">JPY</option>\n                    <option value=\"BGN\">BGN</option>\n                    <option value=\"CZK\">CZK</option>\n                    <option value=\"DKK\">DKK</option>\n                    <option value=\"GBP\">GBP</option>\n                    <option value=\"HUF\">HUF</option>\n                    <option value=\"PLN\">PLN</option>\n                    <option value=\"RON\">RON</option>\n                    <option value=\"SEK\">SEK</option>\n                    <option value=\"CHF\">CHF</option>\n                    <option value=\"ISK\">ISK</option>\n                    <option value=\"NOK\">NOK</option>\n                    <option value=\"HRK\">HRK</option>\n                    <option value=\"RUB\">RUB</option>\n                    <option value=\"TRY\">TRY</option>\n                    <option value=\"AUD\">AUD</option>\n                    <option value=\"BRL\">BRL</option>\n                    <option value=\"CAD\">CAD</option>\n                    <option value=\"CNY\">CNY</option>\n                    <option value=\"HKD\">HKD</option>\n                    <option value=\"IDR\">IDR</option>\n                    <option value=\"ILS\">ILS</option>\n                    <option value=\"INR\">INR</option>\n                    <option value=\"KRW\">KRW</option>\n                    <option value=\"MXN\">MXN</option>\n                    <option value=\"MYR\">MYR</option>\n                    <option value=\"NZD\">NZD</option>\n                    <option value=\"PHP\">PHP</option>\n                    <option value=\"SGD\">SGD</option>\n                    <option value=\"THB\">THB</option>\n                    <option value=\"ZAR\">ZAR</option>\n                  </select>\n                  <select className=\"custom-select\" id=\"para2\">\n                    <option value=\"USD\">USD</option>\n                    <option value=\"EUR\">EUR</option>\n                    <option value=\"JPY\">JPY</option>\n                    <option value=\"BGN\">BGN</option>\n                    <option value=\"CZK\">CZK</option>\n                    <option value=\"DKK\">DKK</option>\n                    <option value=\"GBP\">GBP</option>\n                    <option value=\"HUF\">HUF</option>\n                    <option value=\"PLN\">PLN</option>\n                    <option value=\"RON\">RON</option>\n                    <option value=\"SEK\">SEK</option>\n                    <option value=\"CHF\">CHF</option>\n                    <option value=\"ISK\">ISK</option>\n                    <option value=\"NOK\">NOK</option>\n                    <option value=\"HRK\">HRK</option>\n                    <option value=\"RUB\">RUB</option>\n                    <option value=\"TRY\">TRY</option>\n                    <option value=\"AUD\">AUD</option>\n                    <option value=\"BRL\">BRL</option>\n                    <option value=\"CAD\">CAD</option>\n                    <option value=\"CNY\">CNY</option>\n                    <option value=\"HKD\">HKD</option>\n                    <option value=\"IDR\">IDR</option>\n                    <option value=\"ILS\">ILS</option>\n                    <option value=\"INR\">INR</option>\n                    <option value=\"KRW\">KRW</option>\n                    <option value=\"MXN\">MXN</option>\n                    <option value=\"MYR\">MYR</option>\n                    <option value=\"NZD\">NZD</option>\n                    <option value=\"PHP\">PHP</option>\n                    <option value=\"SGD\">SGD</option>\n                    <option value=\"THB\">THB</option>\n                    <option value=\"ZAR\">ZAR</option>\n                  </select>\n                  <button onClick={this.v}>result</button>\n                </div>\n\n                <div id=\"sonuc\">\n                  {this.miktar} {this.para1}\n                  {this.state.z}\n                  {this.state.result} {this.para2}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}